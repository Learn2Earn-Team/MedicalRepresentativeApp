{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;;AAAtB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;;AAAf,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBgD;AACnC;AAC0B;AACD;AACF;AACF;IAOjD,SAAS,SAAT,SAAS;IAEpB,YAAqB,MAAa,EAAS,OAAwB,EAAS,MAAsB,EAAS,KAAoB,EAAS,QAAwB,EAAW,WAA8B;QAApL,WAAM,GAAN,MAAM,CAAO;QAAS,YAAO,GAAP,OAAO,CAAiB;QAAS,WAAM,GAAN,MAAM,CAAgB;QAAS,UAAK,GAAL,KAAK,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAgB;QAAW,gBAAW,GAAX,WAAW,CAAmB;QADlM,SAAI,GAAM,EAAE,QAAQ,EAAC,EAAE,EAAE,QAAQ,EAAC,EAAE,EAAC;QACiK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAAE,CAAC;IAC5O,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,gBAAgB,CAAC,GAAG,EAAE,GAAG;QACvB,IAAI,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE;YAC3B,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC;YAClB,GAAG,CAAC,IAAI,GAAG,KAAK;SACjB;aACI;YACH,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC;YACtB,GAAG,CAAC,IAAI,GAAG,SAAS;SACrB;IACH,CAAC;IAID,KAAK;QACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,EAAE,QAAQ,EAAC,EAAE,EAAE,QAAQ,EAAC,EAAE,EAAC;IACzC,CAAC;IACD,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEK,WAAW;;YACf,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBAC5C,OAAO,EAAE,YAAY;gBACrB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,SAAS;aACnB,CAAC,CAAC;YAEH,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC;KAAA;;;;;;;;;;AA5CU,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GACW,SAAS;AAAA","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoadingController, MenuController } from '@ionic/angular';\nimport { ApicallService } from 'src/app/services/apicall.service';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit, OnDestroy, AfterViewInit{\n  public user:any= { username:'', password:''}\n  constructor( private router:Router, public apicall : ApicallService, public global : GlobalService, public toast : ToastService, public menuCtrl: MenuController , private loadingCtrl: LoadingController) { this.menuCtrl.enable(false);  }\n  ngAfterViewInit() {\n    this.menuCtrl.enable(false);\n  }\n\n  ngOnInit() {\n    this.menuCtrl.enable(false);\n  }\n  ngOnDestroy() {\n    this.menuCtrl.enable(true);\n  }\n\n  ShowHidePassword(ele, eye) {\n    if (ele.type === 'password') {\n      ele.type = 'text';\n      eye.name = 'eye'\n    }\n    else {\n      ele.type = 'password';\n      eye.name = 'eye-off'\n    }\n  }\n\n\n\n  login(){\n    console.log(this.user);\n    this.apicall.api_login(this.user);\n    this.user = { username:'', password:''}\n  }\n  goToRegister(){\n    this.router.navigate(['register'])\n  }\n\n  async showLoading() {\n    const loading = await this.loadingCtrl.create({\n      message: 'Loading...',\n      duration: 1000,\n      spinner: 'circles',\n    });\n\n    loading.present();\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}